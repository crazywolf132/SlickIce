<?php

namespace DoctrineProxies\__CG__\Concrete\Core\Entity\Express\Control;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AttributeKeyControl extends \Concrete\Core\Entity\Express\Control\AttributeKeyControl implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'attribute_key', 'id', 'is_required', 'position', 'custom_label', 'field_set'];
        }

        return ['__isInitialized__', 'attribute_key', 'id', 'is_required', 'position', 'custom_label', 'field_set'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AttributeKeyControl $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getAttributeKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeKey', []);

        return parent::getAttributeKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributeKey($attribute_key)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributeKey', [$attribute_key]);

        return parent::setAttributeKey($attribute_key);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormControlRenderer(\Concrete\Core\Entity\Express\Entry $entry = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormControlRenderer', [$entry]);

        return parent::getFormControlRenderer($entry);
    }

    /**
     * {@inheritDoc}
     */
    public function getViewControlRenderer(\Concrete\Core\Entity\Express\Entry $entry)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViewControlRenderer', [$entry]);

        return parent::getViewControlRenderer($entry);
    }

    /**
     * {@inheritDoc}
     */
    public function getControlLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getControlLabel', []);

        return parent::getControlLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomLabel', []);

        return parent::getCustomLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomLabel($custom_label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomLabel', [$custom_label]);

        return parent::setCustomLabel($custom_label);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldSet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldSet', []);

        return parent::getFieldSet();
    }

    /**
     * {@inheritDoc}
     */
    public function setFieldSet($field_set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFieldSet', [$field_set]);

        return parent::setFieldSet($field_set);
    }

    /**
     * {@inheritDoc}
     */
    public function getControlOptionsController()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getControlOptionsController', []);

        return parent::getControlOptionsController();
    }

    /**
     * {@inheritDoc}
     */
    public function getControlSaveHandler()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getControlSaveHandler', []);

        return parent::getControlSaveHandler();
    }

    /**
     * {@inheritDoc}
     */
    public function isRequired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRequired', []);

        return parent::isRequired();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsRequired($is_required)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsRequired', [$is_required]);

        return parent::setIsRequired($is_required);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayLabel', []);

        return parent::getDisplayLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function getControlType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getControlType', []);

        return parent::getControlType();
    }

}
