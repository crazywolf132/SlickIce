<?php

namespace DoctrineProxies\__CG__\Concrete\Core\Entity\Page;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Feed extends \Concrete\Core\Entity\Page\Feed implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'itemsPerFeed', 'checkPagePermissions', 'customTopicAttributeKeyHandle', 'customTopicTreeNodeID', 'iconFID', 'pfDescription', 'pfHandle', 'pfTitle', 'pfID', 'cParentID', 'ptID', 'pfIncludeAllDescendents', 'pfDisplayAliases', 'pfContentToDisplay', 'pfAreaHandleToDisplay', 'pfDisplayFeaturedOnly'];
        }

        return ['__isInitialized__', 'itemsPerFeed', 'checkPagePermissions', 'customTopicAttributeKeyHandle', 'customTopicTreeNodeID', 'iconFID', 'pfDescription', 'pfHandle', 'pfTitle', 'pfID', 'cParentID', 'ptID', 'pfIncludeAllDescendents', 'pfDisplayAliases', 'pfContentToDisplay', 'pfAreaHandleToDisplay', 'pfDisplayFeaturedOnly'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Feed $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIconFileID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIconFileID', []);

        return parent::getIconFileID();
    }

    /**
     * {@inheritDoc}
     */
    public function setIconFileID($iconFID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIconFileID', [$iconFID]);

        return parent::setIconFileID($iconFID);
    }

    /**
     * {@inheritDoc}
     */
    public function setParentID($cParentID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentID', [$cParentID]);

        return parent::setParentID($cParentID);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentID', []);

        return parent::getParentID();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($pfDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$pfDescription]);

        return parent::setDescription($pfDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayAliases($pfDisplayAliases)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayAliases', [$pfDisplayAliases]);

        return parent::setDisplayAliases($pfDisplayAliases);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayAliases()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayAliases', []);

        return parent::getDisplayAliases();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayFeaturedOnly($pfDisplayFeaturedOnly)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayFeaturedOnly', [$pfDisplayFeaturedOnly]);

        return parent::setDisplayFeaturedOnly($pfDisplayFeaturedOnly);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayFeaturedOnly()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayFeaturedOnly', []);

        return parent::getDisplayFeaturedOnly();
    }

    /**
     * {@inheritDoc}
     */
    public function getID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getID', []);

        return parent::getID();
    }

    /**
     * {@inheritDoc}
     */
    public function setIncludeAllDescendents($pfIncludeAllDescendents)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIncludeAllDescendents', [$pfIncludeAllDescendents]);

        return parent::setIncludeAllDescendents($pfIncludeAllDescendents);
    }

    /**
     * {@inheritDoc}
     */
    public function getIncludeAllDescendents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncludeAllDescendents', []);

        return parent::getIncludeAllDescendents();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($pfTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$pfTitle]);

        return parent::setTitle($pfTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomTopicAttributeKeyHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomTopicAttributeKeyHandle', []);

        return parent::getCustomTopicAttributeKeyHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomTopicAttributeKeyHandle($customTopicAttributeKeyHandle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomTopicAttributeKeyHandle', [$customTopicAttributeKeyHandle]);

        return parent::setCustomTopicAttributeKeyHandle($customTopicAttributeKeyHandle);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomTopicTreeNodeID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomTopicTreeNodeID', []);

        return parent::getCustomTopicTreeNodeID();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomTopicTreeNodeID($customTopicTreeNodeID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomTopicTreeNodeID', [$customTopicTreeNodeID]);

        return parent::setCustomTopicTreeNodeID($customTopicTreeNodeID);
    }

    /**
     * {@inheritDoc}
     */
    public function setPageTypeID($ptID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageTypeID', [$ptID]);

        return parent::setPageTypeID($ptID);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageTypeID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageTypeID', []);

        return parent::getPageTypeID();
    }

    /**
     * {@inheritDoc}
     */
    public function setHandle($pfHandle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHandle', [$pfHandle]);

        return parent::setHandle($pfHandle);
    }

    /**
     * {@inheritDoc}
     */
    public function getHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHandle', []);

        return parent::getHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function displayShortDescriptionContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'displayShortDescriptionContent', []);

        return parent::displayShortDescriptionContent();
    }

    /**
     * {@inheritDoc}
     */
    public function displayAreaContent($arHandle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'displayAreaContent', [$arHandle]);

        return parent::displayAreaContent($arHandle);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeOfContentToDisplay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeOfContentToDisplay', []);

        return parent::getTypeOfContentToDisplay();
    }

    /**
     * {@inheritDoc}
     */
    public function getAreaHandleToDisplay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAreaHandleToDisplay', []);

        return parent::getAreaHandleToDisplay();
    }

    /**
     * {@inheritDoc}
     */
    public function getFeedURL()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeedURL', []);

        return parent::getFeedURL();
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', []);

        return parent::save();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', []);

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function ignorePermissions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'ignorePermissions', []);

        return parent::ignorePermissions();
    }

    /**
     * {@inheritDoc}
     */
    public function getPageListObject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageListObject', []);

        return parent::getPageListObject();
    }

    /**
     * {@inheritDoc}
     */
    public function getOutput($request = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOutput', [$request]);

        return parent::getOutput($request);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeadLinkElement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeadLinkElement', []);

        return parent::getHeadLinkElement();
    }

}
